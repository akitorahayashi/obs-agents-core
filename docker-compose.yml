services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DEV_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "python -c \"import os,sys,urllib.request; url=f'http://localhost:8000{os.getenv('HEALTHCHECK_PATH','/health/')}'; r=urllib.request.urlopen(url, timeout=5); sys.exit(0 if getattr(r,'status',200)==200 else 1)\"" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s
    ports:
      - "${WEB_HOST}:${DEV_PORT}:8000"
    volumes:
      - .:/app
    command: ["python", "manage.py", "runserver", "0.0.0.0:8000"]
    extra_hosts:
      - "host.docker.internal:host-gateway"

  db:
    image: ${POSTGRES_IMAGE}
    volumes:
      - postgres-db-dev:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DEV_DB_NAME}
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DEV_DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    restart: unless-stopped

volumes:
  postgres-db-dev:
    driver: local
    name: ${PROJECT_NAME}-postgres-db-dev
    external: false